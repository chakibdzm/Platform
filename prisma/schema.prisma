generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String?      @unique
  password    String?      
  score       Int?         @default(0)
  nbBadge     Int?         @default(0)
  enabled     Boolean      @default(true)
  role        Role         @default(USER)
  submissions Submission[]

}

model Verse {
  id         Int         @id @default(autoincrement())
  title      String?
  challenges Challenge[]
}

model Challenge {
  id          Int          @id @default(autoincrement())
  title       String?
  story       String?
  hint        Field
  total_points Int? 
  isEnabled   Boolean @default(false)
  wave        Int?
  difficulty  Difficulty   @default(EASY)
  files       String
  submitType  TYPE
  verseId     Int
  verse       Verse        @relation(fields: [verseId], references: [id])
  submissions Submission[]
  flag        Flag[]
  
}


model Flag {
  id Int @id @default(autoincrement())
  key String?
  points Int? @default(500)
  challenge Challenge @relation(fields: [challengeId],references: [id])
  challengeId Int
}

model Submission {
  id          Int       @id @default(autoincrement())
  submittedBy Int
  challengeId Int
  flag        String?
  link        String?
  isCorrect   Boolean   @default(false)
  submittedAt DateTime  @default(now())
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  user        User      @relation(fields: [submittedBy], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Field {
  DESIGN
  CYBERSECURITY
  PROBLEMSOLVING
  AI
}


enum TYPE {
  LINK
  KEY
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

